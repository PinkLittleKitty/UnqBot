const CloudlyError = require("../cloudlyError.js");
const request = require("node-superfetch");

module.exports = (name, callback) => {

        if(!name) return new CloudlyError("You must put a name to search.");
        if(!callback) return new CloudlyError("Callback must be a function.")

        return getData(name, (err, data) => {

            if(err) return callback(new CloudlyError(`${err}`), null);

            return callback(null, data);
   
        });

}

    async function getUUID(name, callback){

        try{

            const get = await request.get(`https://api.mojang.com/users/profiles/minecraft/${name}`)
            return callback(null, get.body);

        } catch (err) {

            return callback(err, null);

        }

    }

    async function getName(UUID, callback){

        try{

            const get = await request.get(`https://api.mojang.com/user/profiles/${UUID.id}/names`);
            return callback(null, get.body);

        } catch (err) {

            return callback(err, null);

        }
    }

    function getData(name, callback){

        getUUID(name, (err, data) => {

            if(err) return callback(err, null);

            getName(data, (err, nameData) => {

                if(err) return callback(err, null);

                const names = nameData.map(x => JSON.parse(JSON.stringify({ name: `${x.name}`, changedToAt: `${parseInt(x.changedToAt ? x.changedToAt : 0)}` })))
                
                const responseObject = {
                    names: names,
                    latestName: data.name,
                    playerUUID: data.id,
                    bodyURL: `https://minotar.net/armor/body/${data.id}/2048.png`,
                    headURL: `https://minotar.net/helm/${data.id}/2048.png`,
                    skinURL: `https://minotar.net/skin/${data.id}`
                }

                return callback(null, responseObject);

            })

        });

    }